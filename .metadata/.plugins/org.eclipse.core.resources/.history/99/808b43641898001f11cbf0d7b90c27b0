package com.repository;

import java.util.List;
import java.util.Optional;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;

import com.entity.Cab;
import com.entity.Distance;
import com.entity.Location;

@Repository
public interface DistanceRepository extends JpaRepository<Distance, Integer>{

	List<Distance> findByFromLocation(Location location);
	Distance findByToLocationIdAndFromLocationId(Long toLocationId,Long fromLocationId);
	Distance findByFromLocationIdAndToLocationId(Long fromLocationId, Long toLocationId);
	
	/*
	 * Distance findByFromLocationIdAndToLocationId(Long fromLocationId, Long
	 * toLocationId);
	 * 
	 * @Query("SELECT c FROM Cab c WHERE c.cab_id = :cab_id") Optional<Cab>
	 * findById(@Param("cab_id") Long cab_id);
	 */
	
	/*
	 * @Query("SELECT d FROM Distance d WHERE (d.fromLocationId = :fromLocationId AND d.toLocationId = :toLocationId) OR (d.fromLocationId = :fromLocationId AND d.toLocationId = :from_location_id)"
	 * ) Distance findByFromLocationIdAndToLocationId(@Param("fromLocationId") Long
	 * fromLocationId, @Param("toLocationId") Long toLocationId);
	 */
	/*
	 * @Query("SELECT d FROM Distance d WHERE (d.fromLocationId = :fromId AND d.toLocationId = :toId) OR (d.fromLocationId = :toId AND d.toLocationId = :fromId)"
	 * ) Distance findDistance(@Param("fromId") Long fromLocationId, @Param("toId")
	 * Long toLocationId);
	 */
	
}
